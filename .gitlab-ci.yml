default:
  tags:
    - startfleet

stages:
  - setup
  - test
  - release
  - build
  - deploy

workflow:
  rules:
    - if: $CI_COMMIT_TAG || $CI_COMMIT_BRANCH

variables:
  PROD_KUBECONFIG: prod-kubeconfig.yml

setup:
  stage: setup
  image: node:12
  tags:
      - startfleet
  artifacts:
      name: "artifacts-$CI_PIPELINE_ID"
      expire_in: 1 hour
      paths:
          - node_modules/
  script:
      - npm ci

# Use the node modules to test code linting
lint:
  stage: test
  image: node:12
  dependencies: 
    - setup
  script:
      - npm run lint src/

# Use the node modules to do unit tests
unit:
  stage: test
  image: node:12
  dependencies: 
    - setup
  script:
      - npm run test:unit

# this part generate the docker images for tests
testing:
  stage: build
  image:
      name: gcr.io/kaniko-project/executor:debug
      entrypoint: [""]
  script:
      - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
      - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --build-arg BUILD_ENVIRONMENT=development --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  rules:
    - if: $CI_COMMIT_TAG == null

release:
  stage: release
  image: node:12
  script:
  - npx -p semantic-release-gitmoji -p semantic-release -p @semantic-release/gitlab -p @semantic-release/git semantic-release
  variables:
    GITLAB_TOKEN: $GITLAB_TOKEN
  rules:
    - if: $CI_COMMIT_BRANCH == "master"

production:
  stage: build
  image:
      name: gcr.io/kaniko-project/executor:debug
      entrypoint: [""]
  script:
      - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
      - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  rules:
    - if: $CI_COMMIT_TAG != null

deploy:
  stage: deploy
  image: registry.gitlab.com/startfleet/gitlab-runner:master
  tags:
      - startfleet
  script:
      - echo $KUBECONFIG | base64 -d | cat $2 > $PROD_KUBECONFIG
      - export KUBECONFIG=$PROD_KUBECONFIG
      - kubectl set image deployment.v1.apps/entreprise-admin-deployment entreprise-admin=$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG --record -n entreprise-admin
      - kubectl -n entreprise-admin rollout status deployment/entreprise-admin-deployment
  rules:
    - if: $CI_COMMIT_TAG != null
